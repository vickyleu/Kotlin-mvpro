/*
 * Copyright (C) 2017 Ricky.yao https://github.com/vihuela
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 */

// Top-level build file where you can add configuration options common to all sub-projects/modules.

buildscript {
    ext.kotlin_version = '1.5.31'
    repositories {
        all { ArtifactRepository repo ->
            if(repo instanceof MavenArtifactRepository){
                def url = repo.url.toString()
                if (
                (url.startsWith('http://repo1.maven.org/maven2'))||
                        (url.startsWith('https://repo1.maven.org/maven2'))||
                        (url.startsWith('http://jcenter.bintray.com'))||
                        (url.startsWith('https://jcenter.bintray.com'))||
                        (url.startsWith('http://maven.google.com'))||
                        (url.startsWith('https://maven.google.com'))
                ){
                    remove repo
                }
            }
        }
        maven { url 'https://maven.aliyun.com/repository/central'
            allowInsecureProtocol = true
        }
        maven { url 'https://maven.aliyun.com/repository/public'
            allowInsecureProtocol = true
        }
        maven { url 'https://maven.aliyun.com/repository/jcenter'
            allowInsecureProtocol = true
        }
        maven { url 'https://maven.aliyun.com/repository/google'
            allowInsecureProtocol = true
        }
        maven { url 'https://maven.aliyun.com/repository/gradle-plugin'
            allowInsecureProtocol = true
        }
    }
    dependencies {
        classpath "com.android.tools.build:gradle:7.0.3"
        classpath "org.jetbrains.kotlin:kotlin-gradle-plugin:$kotlin_version"
    }
}

allprojects {
    repositories {
        all { ArtifactRepository repo ->
            if(repo instanceof MavenArtifactRepository){
                def url = repo.url.toString()
                if (
                (url.startsWith('http://repo1.maven.org/maven2'))||
                        (url.startsWith('https://repo1.maven.org/maven2'))||
                        (url.startsWith('http://jcenter.bintray.com'))||
                        (url.startsWith('https://jcenter.bintray.com'))||
                        (url.startsWith('http://maven.google.com'))||
                        (url.startsWith('https://maven.google.com'))
                ){
                    remove repo
                }
            }
        }
        maven { url 'https://maven.aliyun.com/repository/central'
            allowInsecureProtocol = true
        }
        maven { url 'https://maven.aliyun.com/repository/public'
            allowInsecureProtocol = true
        }
        maven { url 'https://maven.aliyun.com/repository/jcenter'
            allowInsecureProtocol = true
        }
        maven { url 'https://maven.aliyun.com/repository/google'
            allowInsecureProtocol = true
        }
    }
}

task clean(type: Delete) {
    delete rootProject.buildDir
}